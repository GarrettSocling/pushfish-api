# Official docker image.
image: docker:latest

services:
  - docker:dind

stages:
  - build
  - test
  - release

variables:
  CONTAINER_TEST_IMAGE: registry.gitlab.com/pushrocket/pushrocket-api:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: registry.gitlab.com/pushrocket/pushrocket-api:latest

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  - docker run --rm --privileged multiarch/qemu-user-static:register

build-amd64:
  stage: build
  script:
    - docker build -f docker/Dockerfile.amd64 --pull -t $CONTAINER_TEST_IMAGE-amd64 .
    - docker push $CONTAINER_TEST_IMAGE-amd64

build-i386:
  stage: build
  script:
    - docker build -f docker/Dockerfile.i386 --pull -t $CONTAINER_TEST_IMAGE-i386 .
    - docker push $CONTAINER_TEST_IMAGE-i386

build-arm32v6:
  stage: build
  script:
    - wget https://github.com/multiarch/qemu-user-static/releases/download/v2.12.0-1/qemu-arm-static
    - docker build -f docker/Dockerfile.arm32v6 --pull -t $CONTAINER_TEST_IMAGE-arm32v6 .
    - docker push $CONTAINER_TEST_IMAGE-arm32v6

build-arm64v8:
  stage: build
  script:
    - wget https://github.com/multiarch/qemu-user-static/releases/download/v2.12.0-1/qemu-aarch64-static
    - docker build -f docker/Dockerfile.arm64v8 --pull -t $CONTAINER_TEST_IMAGE-arm64v8 .
    - docker push $CONTAINER_TEST_IMAGE-arm64v8

unitests:
  stage: test
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run $CONTAINER_TEST_IMAGE python tests.py

pylint:
  image: python:3-slim
  allow_failure: true
  before_script:
    - echo
  stage: test
  script:
    - pip install --no-cache-dir -r requirements.txt
    - pip install --no-cache-dir pylint
    - FILES=$(find . -name "*.py")
    - pylint ${FILES}

release-image:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master